/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package core;

import static core.RestManApp.addStaff;
import static core.RestManApp.setCustomerFile;
import static core.RestManApp.setStaffFile;
import static core.RestManApp.systemCustomerAdd;
import java.io.File;
import java.io.FileNotFoundException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;

/**
 *
 * @author mert_
 */
public class StartPoint extends javax.swing.JFrame {

    private String StaffDataPath,CustomerDataPath;

    /**
     * Creates new form StartPoint
     */
    public StartPoint() {
        initComponents();
        setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE );
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Browse = new javax.swing.JButton();
        StaffFileText = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        startButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        CustomerFileText = new javax.swing.JTextField();
        Browse2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Browse.setText("Browse");
        Browse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BrowseActionPerformed(evt);
            }
        });

        StaffFileText.setEditable(false);
        StaffFileText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StaffFileTextActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Customer File");

        startButton.setText("START");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(255, 102, 51));
        jLabel2.setFont(new java.awt.Font("Felix Titling", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("Insert sample Database fÄ±les or an empty  .txt");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Staff File");

        CustomerFileText.setEditable(false);

        Browse2.setText("Browse");
        Browse2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Browse2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(149, 149, 149)
                        .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel1))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(CustomerFileText, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(StaffFileText, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Browse)
                                    .addComponent(Browse2)))
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(StaffFileText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Browse)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CustomerFileText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Browse2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BrowseActionPerformed
        JFileChooser fc = new JFileChooser();
        
        int i = fc.showOpenDialog(this);
        
        if (i == JFileChooser.APPROVE_OPTION) {
            this.StaffDataPath = fc.getSelectedFile().getPath();
            StaffFileText.setText(this.StaffDataPath);
            
    }//GEN-LAST:event_BrowseActionPerformed
    }
    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        // TODO add your handling code here:
        String name = null;
        int counter=0,limit = 0,ssn = 0;
        char gender = 0;
        //staff algo
        try{
        File f=new File(StaffDataPath);
        Scanner scan = null;
        try {
            scan = new Scanner(f);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(StartPoint.class.getName()).log(Level.SEVERE, null, ex);
        }
      
        float salary = 0;  
        
        Date date1 = null,date2 = null,date3 = null;
        while(scan.hasNextLine()){
            //System.out.println(scan.next());
            if(counter==0){
                if(scan.next().charAt(0) =='S'){
                    limit=6;
                }
                else{
                    limit=7;
                }
                counter++;
            }
              
            if(counter==1){ // takes name
                name=scan.next();
                counter++;
            
            }
            if(counter==2){ // takes gender
                gender=scan.next().charAt(0);
                counter++;
              
            }
            if(counter==3){ // takes ssn
                ssn=Integer.parseInt(scan.next());
                counter++;
               
            }
            if(counter==4){ //dob
                date1 = new SimpleDateFormat("dd/mm/yyyy").parse(scan.next());
                counter++;
             
            }
            if(counter==5){ //salary
                salary=Float.parseFloat(scan.next());
                counter++;
             
            }
            if(counter==6 ){ //start date
                date2 = new SimpleDateFormat("dd/mm/yyyy").parse(scan.next());
               
            }
            if(counter==6 & limit==6){  //senior add
                addStaff(ssn,gender,name,date1,salary,date2);
                counter=0;
               
                
            }
            if(counter==6& limit==7){  // junior add and enddate;
                date3 = new SimpleDateFormat("dd/mm/yyyy").parse(scan.next());
                addStaff(ssn,gender,name,date1,salary,date2,date3);
                counter=0;
               
            }
        }
        //
        }
        catch(Exception e){
        
        }
        
        //Customer here
       
        
        File z=new File(CustomerDataPath);
        Scanner scan = null;
        try {
            scan = new Scanner(z);
            scan.useDelimiter(",");

        } catch (FileNotFoundException ex) {
            Logger.getLogger(StartPoint.class.getName()).log(Level.SEVERE, null, ex);
        }
 
      
        float salary = 0;  
        String control,hold;
        counter=0;
        String orderDetails, extraNotes, paymentType;
        Customer customers =null; // creates an empty List then returns it
        ArrayList<Booking> bookings = new ArrayList<>();   //// creates subLists
        ArrayList<inRestOrder> inRestaurant =new ArrayList<>();
        ArrayList<OnlineOrder> onlineOrders =new ArrayList<>();
        
        Date date1 = null,date2 = null,date3 = null;
        while(scan.hasNextLine()){
            hold=scan.next();
            //online order
            if(hold.equals("onlineorder")){
             
                orderDetails=scan.next();
                extraNotes=scan.next();
                paymentType=scan.next();
                onlineOrders.add(new OnlineOrder(orderDetails, extraNotes, paymentType));
                //dddd
                System.out.println(orderDetails+extraNotes+paymentType);
                
                }
           if(hold.equals("inrestaurant")){
               orderDetails=scan.next();
               extraNotes=scan.next();
               inRestaurant.add(new inRestOrder(orderDetails,extraNotes));
               //dddd
               System.out.println(orderDetails+extraNotes);
           }
            if(hold.equals("booking")){
                try {
                    date1 = new SimpleDateFormat("dd/mm/yyyy").parse(scan.next());
                    bookings.add(new Booking(date1, inRestaurant));
                    inRestaurant =new ArrayList<>();
                    
                } catch (ParseException ex) {
                    Logger.getLogger(StartPoint.class.getName()).log(Level.SEVERE, null, ex);
                }
                 
            }
            if(hold.equals("customer")){
                 ssn=Integer.parseInt(scan.next());
                 name=scan.next();
                 gender=scan.next().charAt(0);
                try {
                    date1 = new SimpleDateFormat("dd/mm/yyyy").parse(scan.next());
                } catch (ParseException ex) {
                    Logger.getLogger(StartPoint.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                    date2 = new SimpleDateFormat("dd/mm/yyyy").parse(scan.next());
                } catch (ParseException ex) {
                    Logger.getLogger(StartPoint.class.getName()).log(Level.SEVERE, null, ex);
                }
                 control=scan.next();
                 systemCustomerAdd(ssn,name,gender,date1,date2,bookings,onlineOrders,control);
        // customers=new Customer(ssn,name,gender,date1,date2,bookings,onlineOrders,control);
                 bookings=new ArrayList<>();
                 onlineOrders =new ArrayList<>();
                 //ddd
            //     System.out.println(customers.getName()+customers.getCreditCardDetails());
                
                 
                 
            }
        }
            //System.out.println(scan.next());
              scan.close();

        setStaffFile(StaffDataPath);
        setCustomerFile(CustomerDataPath);
        
         SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                MainMenu a=new MainMenu();   
                a.setVisible(true);
            }
        });  
    }//GEN-LAST:event_startButtonActionPerformed

    private void Browse2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Browse2ActionPerformed
    JFileChooser fc = new JFileChooser();

            int i = fc.showOpenDialog(this);

            if (i == JFileChooser.APPROVE_OPTION) {
                this.CustomerDataPath = fc.getSelectedFile().getPath();
                CustomerFileText.setText(this.CustomerDataPath);

        }        // TODO add your handling code here:
    }//GEN-LAST:event_Browse2ActionPerformed

    private void StaffFileTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StaffFileTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_StaffFileTextActionPerformed
    
    /**
     * @param args the command line arguments
     */
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Browse;
    private javax.swing.JButton Browse2;
    private javax.swing.JTextField CustomerFileText;
    private javax.swing.JTextField StaffFileText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton startButton;
    // End of variables declaration//GEN-END:variables
}
